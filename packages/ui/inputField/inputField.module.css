.div {
    position: relative;
    display: inline-block;
    box-sizing: border-box;
    width: 100%;
    padding-top: 0.6rem;
    font-size: 1.3rem;
    overflow: hidden;
}
.input {
    box-sizing: border-box;
    width: 100%;
    margin: 0rem;
    border-image: initial;
    background-color: rgb(var(--surfaceContainerHighestColor, 230 224 233));
    color: rgb(var(--onSurfaceColor, 28 27 31) / 0.87);
    caret-color: rgb(var(--primaryColor, 11 87 208));
}
.input:focus {
    outline: none;
}

.input ~ .label {
    position: absolute;
    top: 0;
    left: 0;
    display: block;
    width: 100%;
    height: 100%;
    font-size: 1.3rem;
    color: rgb(var(--onSurfaceColor, 28 27 31) / 0.6);
    transition: 0.3s;
    pointer-events: none;
}
.input:focus ~ .label {
    color: rgb(var(--primaryColor, 11 87 208));
}

/********************************************* OutLined */
.input.outlined {
    height: 5rem;
    padding: 1.5rem 1.3rem;
    border-width: 0.1rem;
    border-style: solid;
    border-color: rgb(var(--onSurfaceColor, 28 27 31) / 0.6);
    border-radius: 0.4rem;
    background-color: transparent;
}
.input.outlined::placeholder {
    color: transparent;
}
.input.outlined:focus {
    border-width: 0.2rem;
    border-color: rgb(var(--primaryColor, 11 87 208));
}
.input.outlined.havePlaceHolder:focus,
.input.outlined.havePlaceHolder:not(:placeholder-shown) {
    border-top-color: transparent;
}

.input.outlined ~ .label {
    display: flex;
    border-color: rgb(var(--onSurfaceColor, 28 27 31) / 0.6);
    width: 100%;
    max-height: 100%;
    line-height: 6rem;
}
.input.outlined:focus ~ .label,
.input.outlined:not(:placeholder-shown) ~ .label {
    font-size: 1.1rem;
    line-height: 1.5rem;
}

.input.outlined ~ .label::before,
.input.outlined ~ .label::after {
    margin-top: 0.6rem;
    border-top-width: 0.1rem;
    border-top-style: solid;
    border-color: transparent;
    content: "";
}
.input.outlined:not(:placeholder-shown) ~ .label::before,
.input.outlined:not(:placeholder-shown) ~ .label::after {
    border-color: rgb(var(--onSurfaceColor, 28 27 31) / 0.6);
}
.input.outlined ~ .label::before {
    width: 1rem;
    margin-right: 1.2rem;
    border-radius: 0.4rem 0rem;
}
.input.outlined ~ .label::after {
    width: 100%;
    margin-left: 1.2rem;
    border-radius: 0rem 0.4rem;
}
.input.outlined:focus ~ .label::before,
.input.outlined:focus ~ .label::after {
    border-width: 0.2rem;
    border-top-color: rgb(var(--primaryColor, 11 87 208));
}

/********************************************* Filled */
.input.filled {
    height: 5rem;
    padding: 0 1.2rem;
    border: none;
    border-bottom: solid 0.1rem rgb(var(--onSurfaceColor, 28 27 31) / 0.6);
    border-radius: 0.4rem 0.4rem 0rem 0rem;
    background-color: rgb(var(--onSurfaceColor, 28 27 31) / 0.04);
}
.input.filled.havePlaceHolder {
    padding: 2rem 1.2rem 0.5rem;
}
.input.filled::placeholder {
    color: transparent;
}

.input.filled ~ .label {
    display: block;
    box-sizing: border-box;
    line-height: 6rem;
    padding: 0 1rem;
}
.input.filled:focus ~ .label,
.input.filled:not(:placeholder-shown) ~ .label {
    font-size: 1.1rem;
    line-height: 4rem;
}

.input.filled ~ .label::after {
    position: absolute;
    left: 0rem;
    content: "";
    bottom: 0rem;
    width: 100%;
    height: 0.2rem;
    display: inline-block;
    background-color: rgb(var(--primaryColor, 11 87 208));
    transform: scaleX(0);
    transition: transform 0.3s ease 0s;
}
.input.filled:focus ~ .label::after {
    transform: scale(1);
    content: "";
}
